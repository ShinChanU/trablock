{"version":3,"sources":["lib/styles/palette.js","components/common/Button2.js","components/Base/Header/Header2.js","components/Landing/Logo.js","components/Auth/AuthTemplate.js","redux/modules/loading.js","lib/createRequestSaga.js","lib/api/client.js","lib/api/auth.js","redux/modules/auth.js","lib/styleUtils.js","components/common/Button.js","components/Auth/AuthForm.js","containers/Auth/SignupForm.js","pages/SignupPage.js","containers/Auth/LoginForm.js","pages/LoginPage.js","components/Canvas/CanvasMenu.js","components/Canvas/CanvasTemplate.js","components/Canvas/BuildTab/Location.js","components/Canvas/BuildTab/Day.js","components/Canvas/BuildTab/Styles/ArrowIcon.js","components/Canvas/BuildTab/CategoryBlock.js","components/Canvas/BuildTab/DndMainArea.js","containers/Canvas/BuildBlockForm.js","components/Canvas/CanvasForm.js","pages/CanvasPages/TravelSettingPage.js","pages/CanvasPages/SelectBlockPage.js","pages/CanvasPages/BuildBlockPage.js","pages/CanvasPages/TravelSharePage.js","pages/CanvasPages/CanvasMainPage.js","App.js","reportWebVitals.js","redux/modules/user.js","lib/api/plan.js","redux/modules/plan.js","redux/modules/index.js","index.js"],"names":["palette","gray","cyan","buttonStyle","css","props","fullWidth","StyledButton","styled","button","StyledLink","Link","Button","to","Div","div","Header","user","onLogout","Button2","SubDiv","letter","Img","img","picture","Logo","src","process","alt","AuthTemplateBlock","WhiteBox","Main","Illustration","plane","traveler","MainCharacter","AuthTemplate","children","Header2","START_LOADING","FINISH_LOADING","startLoading","createAction","requestType","finishLoading","loading","handleActions","state","action","payload","createRequestActionTypes","type","createRequestSaga","request","SUCCESS","FAILURE","put","call","response","data","error","client","axios","create","logout","post","authSaga","CHANGE_FIELD","INITIALIZE_FORM","SIGNUP","SIGNUP_SUCCESS","SIGNUP_FAILURE","LOGIN","LOGIN_SUCCESS","LOGIN_FAILURE","changeField","form","key","value","initializeForm","signup","username","password","realName","nickname","birthday","phoneNum","gender","email","login","signupSaga","then","res","console","log","catch","err","loginSaga","takeLatest","weight","initialState","passwordCheck","auth","authError","produce","draft","sizes","wide","desktop","tablet","phone","Object","keys","reduce","acc","label","oc","AuthFormBlock","H2","h2","SpanRed","span","StyledDiv","StyledInput","input","Footer","ButtonWidthMarginTop","textMap","ErrorMessage","AuthForm","onChange","onSubmit","text","autoComplete","name","placeholder","style","width","margin","marginLeft","SignupForm","useState","setError","dispatch","useDispatch","useSelector","userState","useCallback","e","target","useEffect","preventDefault","includes","SignupPage","LoginForm","LoginPage","Menu","teal","List","ul","Item","li","selected","MenuLink","CanvasMenu","pathname","useLocation","CanvasTemplate","Container","isDragging","ListDiv","Location","location","index","draggableId","id","provided","snapshot","ref","innerRef","dragHandleProps","draggableProps","image","Title","LocationsList","isDraggingOver","Day","day","locations","title","droppableId","droppableProps","map","MyArrowIcon","ArrowDropDownIcon","cursor","transform","transition","ArrowIcon","onClick","clickState","Ul","CategoryBlock","setClickState","Basket","Days","categoryKeys","attractions","restaurants","accommodations","DndMainArea","userPlan","globalLocations","setUserPlanData","travelDays","dayOrder","selectedLocations","onDragEnd","result","destination","source","startDropId","endDropId","indexOf","dragIdObj","newSelLocOrder","newDayOrder","splice","locationIds","temp","category","locationId","locObj","dayId","join","Section","BuildBlockForm","setUserPlan","setGlobalLocations","a","get","userPlanResult","globalLocationsResult","getData","x","CanvasDiv","H1","setting","select","build","share","CanvasForm","TravelSettingPage","SelectBlockPage","BuildBlockPage","TravelSharePage","CanvasMainPage","element","path","App","useRoutes","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","logoutSaga","userSaga","TEMP_SET_USER","CHECK","CHECK_SUCCESS","CHECK_FAILURE","LOGOUT","tempSetUser","check","checkSaga","checkFailureSaga","localStorage","removeItem","authAPI","checkError","getPlan","planSaga","GET_PLAN","GET_PLAN_SUCCESS","GET_PLAN_FAILURE","getPlansSaga","planAPI","plan","planError","rootSaga","all","rootReducer","combineReducers","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","getItem","loadUser","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.adc43d36.chunk.js","sourcesContent":["const palette = {\r\n  gray: [\r\n    '#f8f9fa',\r\n    '#f1f3f5',\r\n    '#e9ecef',\r\n    '#dee2e6',\r\n    '#ced4da',\r\n    '#adb5bd',\r\n    '#868e96',\r\n    '#495057',\r\n    '#343a40',\r\n    '#212529',\r\n  ],\r\n  cyan: [\r\n    '#e3fafc',\r\n    '#c5f6fa',\r\n    '#99e9f2',\r\n    '#66d9e8',\r\n    '#3bc9db',\r\n    '#22b8cf',\r\n    '#15aabf',\r\n    '#1098ad',\r\n    '#0c8599',\r\n    '#0b7285',\r\n  ],\r\n};\r\n\r\nexport default palette;\r\n","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport palette from 'lib/styles/palette';\r\n\r\nconst buttonStyle = css`\r\n  margin-left: 100px;\r\n  font-weight: 600;\r\n  font-size: 23px;\r\n  color: black;\r\n  cursor: pointer;\r\n  text-decoration: none;\r\n  transition: 0.2s all;\r\n\r\n  &:hover {\r\n  }\r\n\r\n  &:active {\r\n    /* 마우스 클릭시 아래로 미세하게 움직임 */\r\n    transform: translateY(3px);\r\n  }\r\n\r\n  ${(props) =>\r\n    props.fullWidth &&\r\n    css`\r\n      padding-top: 0.75rem;\r\n      padding-bottom: 0.75rem;\r\n      width: 100%;\r\n      font-size: 1.125rem;\r\n      color: white;\r\n    `}\r\n\r\n  ${(props) =>\r\n    props.cyan &&\r\n    css`\r\n      background: ${palette.cyan[5]};\r\n      &:hover {\r\n        background: ${palette.cyan[5]};\r\n      }\r\n    `}\r\n`;\r\n\r\nconst StyledButton = styled.button`\r\n  ${buttonStyle}\r\n`;\r\n\r\nconst StyledLink = styled(Link)`\r\n  ${buttonStyle}\r\n`;\r\n\r\nconst Button = (props) => {\r\n  return props.to ? <StyledLink {...props} /> : <StyledButton {...props} />;\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Button2 from 'components/common/Button2';\r\n\r\nconst Div = styled.div`\r\n  height: 130px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Header = ({ user, onLogout }) => {\r\n  return (\r\n    <>\r\n      <Div>\r\n        <Button2 to=\"/canvas/setting\">Go Plan</Button2>\r\n        <Button2 to=\"/about\">About</Button2>\r\n        <Button2 to=\"/contact\">Contact</Button2>\r\n      </Div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styled, { css } from 'styled-components';\r\n\r\nconst SubDiv = styled.div`\r\n  ${props => \r\n    props.letter && css`\r\n    text-align: center;\r\n    height: 80px;\r\n    padding-top: 15px;\r\n    `\r\n  }\r\n`;\r\n\r\nconst Img = styled.img`\r\n  ${props => \r\n    props.picture && css`\r\n      position: absolute;\r\n      left: 3%;\r\n    `\r\n  }\r\n`;\r\n\r\nconst Logo = () => {\r\n  return (\r\n    <Link to=\"/\">\r\n      <SubDiv>\r\n        <Img src={process.env.PUBLIC_URL + '/images/logoPainting.png'} alt=\"\" picture />\r\n      </SubDiv>\r\n      <SubDiv letter>\r\n        <Img src={process.env.PUBLIC_URL + '/images/logoLetter.png'} alt=\"\" letter />\r\n      </SubDiv>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default Logo;","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport Header2 from 'components/Base/Header/Header2';\r\nimport Logo from 'components/Landing/Logo';\r\n\r\nconst AuthTemplateBlock = styled.div`\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  background-color: #fff1a9;\r\n`;\r\n\r\nconst WhiteBox = styled.div`\r\n  box-shadow: 0 0 8px rgba(0, 0, 0, 0.025);\r\n  padding: 2rem;\r\n  width: 45%;\r\n  background: white;\r\n  border-radius: 0 45px 45px 0;\r\n`;\r\n\r\nconst Main = styled.div`\r\n  width: 55%;\r\n  height: 100vh;\r\n`;\r\n\r\nconst Illustration = styled.div`\r\n  ${(props) =>\r\n    props.plane &&\r\n    css`\r\n      margin-top: 20px;\r\n      padding-left: 40px;\r\n    `}\r\n\r\n  ${(props) =>\r\n    props.traveler &&\r\n    css`\r\n      position: relative;\r\n      text-align: center;\r\n      top: -30px;\r\n    `}\r\n`;\r\n\r\nconst MainCharacter = styled.img``;\r\n\r\nconst AuthTemplate = ({ children }) => {\r\n  return (\r\n    <AuthTemplateBlock>\r\n      <WhiteBox>\r\n        <Logo />\r\n        {children}\r\n      </WhiteBox>\r\n      <Main>\r\n        <Header2 />\r\n        <Illustration plane>\r\n          <MainCharacter src={process.env.PUBLIC_URL + '/images/plane.png'} />\r\n        </Illustration>\r\n        <Illustration traveler>\r\n          <MainCharacter\r\n            src={process.env.PUBLIC_URL + '/images/mainCharacter.png'}\r\n          />\r\n        </Illustration>\r\n      </Main>\r\n    </AuthTemplateBlock>\r\n  );\r\n};\r\n\r\nexport default AuthTemplate;\r\n","import { createAction, handleActions } from 'redux-actions';\r\n\r\nconst START_LOADING = 'loading/START_LOADING';\r\nconst FINISH_LOADING = 'loading/FINISH_LOADING';\r\n\r\n// 요청을 위한 액션 타입을 payload로 설정합니다. (예: \"sample/GET_POST\")\r\nexport const startLoading = createAction(\r\n  START_LOADING,\r\n  requestType => requestType,\r\n);\r\n\r\nexport const finishLoading = createAction(\r\n  FINISH_LOADING,\r\n  requestType => requestType,\r\n);\r\n\r\nconst initialState = {};\r\n\r\nconst loading = handleActions(\r\n  {\r\n    [START_LOADING]: (state, action) => ({\r\n      ...state,\r\n      [action.payload]: true,\r\n    }),\r\n    [FINISH_LOADING]: (state, action) => ({\r\n      ...state,\r\n      [action.payload]: false,\r\n    }),\r\n  },\r\n  initialState,\r\n);\r\n\r\nexport default loading;","import { call, put } from 'redux-saga/effects';\r\nimport { startLoading, finishLoading } from 'redux/modules/loading';\r\n\r\nexport const createRequestActionTypes = (type) => {\r\n  const SUCCESS = `${type}_SUCCESS`;\r\n  const FAILURE = `${type}_FAILURE`;\r\n  return [type, SUCCESS, FAILURE];\r\n};\r\n\r\nexport default function createRequestSaga(type, request) {\r\n  const SUCCESS = `${type}_SUCCESS`;\r\n  const FAILURE = `${type}_FAILURE`;\r\n\r\n  return function* (action) {\r\n    yield put(startLoading(type)); // 로딩 시작\r\n    try {\r\n      const response = yield call(request, action.payload);\r\n      yield put({\r\n        type: SUCCESS,\r\n        payload: response.data,\r\n      });\r\n    }\r\n    catch (e) {\r\n      yield put({\r\n        type: FAILURE,\r\n        payload: e,\r\n        error: true,\r\n      });\r\n    }\r\n    yield put(finishLoading(type)); // 로딩 끝\r\n  };\r\n}","import axios from 'axios';\r\n\r\nconst client = axios.create();\r\n\r\n// client.defaults.baseURL = 'https://external-api-server.com/' \r\n\r\n/*\r\n  글로벌 설정 예시:\r\n  // API 주소를 다른 곳으로 사용함\r\n\r\n  // 헤더 설정\r\n  client.defaults.headers.common[’Authorization‘] = 'Bearer a1b2c3d4';\r\n\r\n  // 인터셉터 설정\r\n  axios.intercepter.response.use(</span>\r\n    response => {\r\n      // 요청 성공 시 특정 작업 수행\r\n      return response;\r\n    }, \r\n    error => {\r\n      // 요청 실패 시 특정 작업 수행\r\n      return Promise.reject(error);\r\n    }\r\n  })  \r\n*/\r\n\r\nexport default client;","import client from './client';\r\n\r\n// 로그인\r\nexport const login = ({ username, password }) =>\r\n  client.post('/login_proc', { username, password });\r\n\r\n// 회원가입\r\nexport const signup = ({ username, password, realName, nickname, birthday, phoneNum, gender, email }) =>\r\n  client.post('http://localhost:4000/users', {\r\n    username, password, realName, nickname, birthday, phoneNum, gender, email\r\n  })\r\n    .then(res => console.log(res))\r\n    .catch(err => console.log(err));\r\n\r\n// // 로그인 상태 확인\r\nexport const check = () => client.get('/api/auth/check');\r\n\r\n// 로그아웃\r\nexport const logout = () => client.post('/api/logout');","import { createAction, handleActions } from 'redux-actions';\r\nimport produce from 'immer';\r\nimport { takeLatest } from 'redux-saga/effects';\r\nimport createRequestSaga, {\r\n  createRequestActionTypes,\r\n} from 'lib/createRequestSaga';\r\nimport * as authAPI from 'lib/api/auth';\r\n\r\n// 액션 생성\r\nconst CHANGE_FIELD = 'auth/CHANGE_FIELD'; // input 값\r\nconst INITIALIZE_FORM = 'auth/INITIALIZE_FORM'; // form 초기화\r\n\r\n// 액션 함수 생성\r\nconst [SIGNUP, SIGNUP_SUCCESS, SIGNUP_FAILURE] =\r\n  createRequestActionTypes('auth/SIGNUP');\r\n\r\nconst [LOGIN, LOGIN_SUCCESS, LOGIN_FAILURE] =\r\n  createRequestActionTypes('auth/LOGIN');\r\n\r\nexport const changeField = createAction(\r\n  CHANGE_FIELD,\r\n  ({ form, key, value }) => ({\r\n    form, // login, signup\r\n    key, // username, password, name ..\r\n    value,\r\n  }),\r\n);\r\n\r\nexport const initializeForm = createAction(INITIALIZE_FORM, (form) => form); // signup, login\r\n\r\nexport const signup = createAction(\r\n  SIGNUP,\r\n  ({\r\n    username,\r\n    password,\r\n    realName,\r\n    nickname,\r\n    birthday,\r\n    phoneNum,\r\n    gender,\r\n    email,\r\n  }) => ({\r\n    username,\r\n    password,\r\n    realName,\r\n    nickname,\r\n    birthday,\r\n    phoneNum,\r\n    gender,\r\n    email,\r\n  }),\r\n);\r\n\r\nexport const login = createAction(LOGIN, ({ username, password }) => ({\r\n  username,\r\n  password,\r\n}));\r\n// export const login = ({ type: LOGIN });\r\n\r\n// 사가 생성\r\n// yield 비동기 통신\r\nconst signupSaga = createRequestSaga(SIGNUP, authAPI.signup);\r\nconst loginSaga = createRequestSaga(LOGIN, authAPI.login);\r\nexport function* authSaga() {\r\n  yield takeLatest(SIGNUP, signupSaga);\r\n  yield takeLatest(LOGIN, loginSaga);\r\n}\r\n\r\n// 초기값\r\nconst initialState = {\r\n  // 불변성 유지하면서 객체 수정\r\n  signup: {\r\n    username: '',\r\n    password: '',\r\n    passwordCheck: '',\r\n    realName: '',\r\n    nickname: '',\r\n    birthday: '',\r\n    phoneNum: '',\r\n    gender: '',\r\n    email: '',\r\n  },\r\n  login: {\r\n    username: '',\r\n    password: '',\r\n  },\r\n  auth: null,\r\n  authError: null,\r\n};\r\n\r\n// function auth(state = initialState, action) {\r\n//   switch(action.type) {\r\n//     case LOGIN:\r\n//       return {\r\n//         ...state\r\n//         ..\r\n//       }\r\n//   }\r\n// }\r\n\r\nconst auth = handleActions(\r\n  {\r\n    [CHANGE_FIELD]: (\r\n      state,\r\n      { payload: { form, key, value } }, // action 대신 구조분해, action.payload.form, key.. 호출\r\n    ) =>\r\n      produce(state, (draft) => {\r\n        draft[form][key] = value; // ex. state.signup.username\r\n      }),\r\n    [INITIALIZE_FORM]: (state, { payload: form }) => ({\r\n      ...state,\r\n      [form]: initialState[form],\r\n      authError: null, // 폼 전환 시 외원 인증 에러 초기화\r\n    }),\r\n    // 회원가입 성공\r\n    [SIGNUP_SUCCESS]: (state, { payload: auth }) => ({\r\n      ...state,\r\n      authError: null,\r\n      auth,\r\n    }),\r\n    // 회원가입 실패\r\n    [SIGNUP_FAILURE]: (state, { payload: error }) => ({\r\n      ...state,\r\n      authError: error,\r\n    }),\r\n    // 로그인 성공\r\n    [LOGIN_SUCCESS]: (state, { payload: auth }) => ({\r\n      ...state,\r\n      authError: null,\r\n      auth,\r\n    }),\r\n    // 로그인 실패\r\n    [LOGIN_FAILURE]: (state, { payload: error }) => ({\r\n      ...state,\r\n      authError: error,\r\n    }),\r\n  },\r\n  initialState,\r\n);\r\n\r\nexport default auth;\r\n","import { css } from 'styled-components';\r\n\r\n// 미디어 쿼리 헬퍼: https://www.styled-components.com/docs/advanced#media-templates 참조\r\nexport const sizes = {\r\n  wide: '1200px',\r\n  desktop: '992px',\r\n  tablet: '768px',\r\n  phone: '376px'\r\n};\r\n\r\nexport const media = Object.keys(sizes).reduce((acc, label) => {\r\n  acc[label] = (...args) => css`\r\n        @media (max-width: ${sizes[label]}) {\r\n            ${css(...args)}\r\n        }\r\n    `;\r\n  return acc;\r\n}, {});\r\n\r\n// 그림자 효과: https://codepen.io/sdthornton/pen/wBZdXq 기반\r\nexport const shadow = (weight) => {\r\n  const shadows = [\r\n    css`box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);`,\r\n    css`box-shadow: 0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23);`,\r\n    css`box-shadow: 0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23);`,\r\n    css`box-shadow: 0 14px 28px rgba(0,0,0,0.25), 0 10px 10px rgba(0,0,0,0.22);`,\r\n    css`box-shadow: 0 19px 38px rgba(0,0,0,0.30), 0 15px 12px rgba(0,0,0,0.22);`\r\n  ];\r\n\r\n  return shadows[weight];\r\n};","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport oc from 'open-color';\r\nimport { Link } from 'react-router-dom';\r\nimport { shadow } from 'lib/styleUtils';\r\nimport palette from 'lib/styles/palette';\r\n\r\nconst buttonStyle = css`\r\n  border: 1px solid ${oc.cyan[6]};\r\n  border-radius: 2px;\r\n  font-weight: 600;\r\n  padding: 0.5rem;\r\n  padding-bottom: 0.4rem;\r\n  color: ${oc.cyan[6]};\r\n  cursor: pointer;\r\n  text-decoration: none;\r\n  transition: .2s all;\r\n  background: white;\r\n\r\n  &:hover {\r\n    background: ${oc.cyan[6]};\r\n    color: white;\r\n    ${shadow(1)}\r\n  }\r\n\r\n  &:active {\r\n    /* 마우스 클릭시 아래로 미세하게 움직임 */\r\n    transform: translateY(3px);\r\n  }\r\n\r\n  ${props =>\r\n    props.fullWidth && css`\r\n      padding-top: 0.75rem;\r\n      padding-bottom: 0.75rem;\r\n      width: 100%;\r\n      font-size: 1.125rem;\r\n      color: white;\r\n    `\r\n  }\r\n\r\n${props =>\r\n    props.cyan && css`\r\n      background: ${palette.cyan[5]};\r\n      &:hover {\r\n        background: ${palette.cyan[5]};\r\n      }`\r\n  }\r\n`;\r\n\r\nconst StyledButton = styled.button`\r\n  ${buttonStyle}\r\n`;\r\n\r\nconst StyledLink = styled(Link)`\r\n  ${buttonStyle}\r\n`;\r\n\r\nconst Button = props => {\r\n  return props.to ? (\r\n    <StyledLink {...props} />\r\n  ) : (\r\n    <StyledButton {...props} />\r\n  )\r\n};\r\n\r\nexport default Button;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport palette from 'lib/styles/palette';\r\nimport Button from 'components/common/Button';\r\n// import AccountCircle from './icons/AccountCircle';\r\n\r\nconst AuthFormBlock = styled.div`\r\n  padding-top: 30px;\r\n`;\r\n\r\nconst Div = styled.div`\r\n  margin: 30px 60px;\r\n`;\r\n\r\nconst H2 = styled.h2`\r\n  margin-top: 0;\r\n  margin-bottom: 30px;\r\n`;\r\n\r\n// const Form = styled.form`\r\n//   margin: 30px;\r\n// `;\r\n\r\n// const H4 = styled.h4`\r\n//   margin-top: 10px;\r\n//   font-weight: lighter;\r\n//   text-align: center;\r\n// `;\r\n\r\nconst SpanRed = styled.span`\r\n  margin-left: 20px;\r\n  font-size: 15px;\r\n  color: blue;\r\n`;\r\n\r\nconst StyledDiv = styled.div`\r\n  position: relative;\r\n  /* text-align: center; */\r\n  /* display: flex; */\r\n  /* justify-content: space-between; */\r\n  padding-bottom: 1.5rem;\r\n`;\r\n\r\n// const StyledLabel = styled.label`\r\n// `;\r\n\r\nconst StyledInput = styled.input`\r\n  padding-left: 30px;\r\n  /* margin-right: 30px; */\r\n  font-size: 1rem;\r\n  /* border: none; */\r\n  border: 1px solid ${palette.gray[5]};\r\n  border-radius: 8px;\r\n  /* padding-bottom: 0.5rem; */\r\n  outline: none;\r\n  width: 100%;\r\n  height: 45px;\r\n  &:focus {\r\n    border-bottom: 1px solid ${palette.gray[7]};\r\n  }\r\n  & + & {\r\n    margin-top: 1rem;\r\n  }\r\n`;\r\n\r\nconst Footer = styled.div`\r\n  margin-top: 2rem;\r\n  text-align: right;\r\n  a {\r\n    color: ${palette.gray[6]};\r\n    text-decoration: underline;\r\n    &:hover {\r\n      color: ${palette.gray[9]};\r\n    }\r\n  }\r\n`;\r\n\r\nconst ButtonWidthMarginTop = styled(Button)`\r\n  margin-top: 1rem;\r\n`;\r\n\r\nconst textMap = {\r\n  login: 'Login',\r\n  signup: 'Sign Up',\r\n};\r\n/**\r\n * 에러를 보여 줍니다.\r\n */\r\nconst ErrorMessage = styled.div`\r\n  color: red;\r\n  text-align: center;\r\n  font-size: 0.875rem;\r\n  margin-top: 1rem;\r\n`;\r\n\r\nconst AuthForm = ({ type, form, onChange, onSubmit, error }) => {\r\n  const text = textMap[type];\r\n  return (\r\n    <>\r\n      <AuthFormBlock>\r\n        <Div>\r\n          <H2>\r\n            {text}\r\n            {type === 'signup' && <SpanRed>(* Required fields)</SpanRed>}\r\n          </H2>\r\n          <form onSubmit={onSubmit}>\r\n            <StyledDiv>\r\n              {/* <StyledLabel>아이디\r\n                {type === 'signup' && (\r\n                  <SpanRed>*</SpanRed>\r\n                )}\r\n              </StyledLabel> */}\r\n              <StyledInput\r\n                autoComplete=\"username\"\r\n                name=\"username\"\r\n                placeholder=\"Username*\"\r\n                onChange={onChange}\r\n                value={form.username}\r\n              />\r\n              {/* <AccountCircle /> */}\r\n            </StyledDiv>\r\n            <StyledDiv>\r\n              {/* <StyledLabel>비밀번호\r\n                {type === 'signup' && (\r\n                  <SpanRed>*</SpanRed>\r\n                )}\r\n              </StyledLabel> */}\r\n              <StyledInput\r\n                autoComplete=\"new-password\"\r\n                name=\"password\"\r\n                placeholder=\"Password*\"\r\n                type=\"password\"\r\n                onChange={onChange}\r\n                value={form.password}\r\n              />\r\n            </StyledDiv>\r\n            {type === 'signup' && (\r\n              <>\r\n                <StyledDiv>\r\n                  {/* <StyledLabel>비밀번호 확인<SpanRed>*</SpanRed></StyledLabel> */}\r\n                  <StyledInput\r\n                    autoComplete=\"new-password\"\r\n                    name=\"passwordCheck\"\r\n                    placeholder=\"Confirm Password*\"\r\n                    type=\"password\"\r\n                    onChange={onChange}\r\n                    value={form.passwordCheck}\r\n                  />\r\n                </StyledDiv>\r\n                <StyledDiv>\r\n                  {/* <StyledLabel>이름<SpanRed>*</SpanRed></StyledLabel> */}\r\n                  <StyledInput\r\n                    name=\"realName\"\r\n                    placeholder=\"Name*\"\r\n                    type=\"text\"\r\n                    onChange={onChange}\r\n                    value={form.realName}\r\n                  />\r\n                </StyledDiv>\r\n                <StyledDiv>\r\n                  {/* <StyledLabel>닉네임<SpanRed>*</SpanRed></StyledLabel> */}\r\n                  <StyledInput\r\n                    name=\"nickname\"\r\n                    placeholder=\"Nickname*\"\r\n                    type=\"text\"\r\n                    onChange={onChange}\r\n                    value={form.nickname}\r\n                  />\r\n                </StyledDiv>\r\n                <StyledDiv>\r\n                  {/* <StyledLabel>Birthday</StyledLabel> */}\r\n                  <StyledInput\r\n                    name=\"birthday\"\r\n                    type=\"date\"\r\n                    onChange={onChange}\r\n                    value={form.birthday}\r\n                  />\r\n                </StyledDiv>\r\n                <StyledDiv>\r\n                  {/* <StyledLabel>Tel</StyledLabel> */}\r\n                  <StyledInput\r\n                    name=\"phoneNum\"\r\n                    placeholder=\"Phone Number (No Hyphen - )\"\r\n                    type=\"tel\"\r\n                    onChange={onChange}\r\n                    value={form.phoneNum}\r\n                  />\r\n                </StyledDiv>\r\n                <StyledDiv>\r\n                  {/* <StyledLabel>성별</StyledLabel> */}\r\n                  <div\r\n                    style={{\r\n                      width: '270px',\r\n                      // marginRight: \"30px\",\r\n                    }}\r\n                  >\r\n                    <StyledInput\r\n                      style={{\r\n                        width: '20px',\r\n                        margin: '0px',\r\n                      }}\r\n                      name=\"gender\"\r\n                      type=\"radio\"\r\n                      value=\"MALE\"\r\n                      onChange={onChange}\r\n                    />\r\n                    남자\r\n                    <StyledInput\r\n                      style={{\r\n                        width: '20px',\r\n                        margin: '0px',\r\n                        marginLeft: '70px',\r\n                      }}\r\n                      name=\"gender\"\r\n                      type=\"radio\"\r\n                      value=\"FEMALE\"\r\n                      onChange={onChange}\r\n                    />\r\n                    여자\r\n                  </div>\r\n                </StyledDiv>\r\n                <StyledDiv>\r\n                  {/* <StyledLabel>이메일<SpanRed>*</SpanRed></StyledLabel> */}\r\n                  <StyledInput\r\n                    name=\"email\"\r\n                    placeholder=\"Email*\"\r\n                    type=\"email\"\r\n                    onChange={onChange}\r\n                    value={form.email}\r\n                  />\r\n                </StyledDiv>\r\n              </>\r\n            )}\r\n            {error && <ErrorMessage>{error}</ErrorMessage>}\r\n            <ButtonWidthMarginTop cyan fullWidth>\r\n              {text}\r\n            </ButtonWidthMarginTop>\r\n          </form>\r\n          <Footer>\r\n            {type === 'login' ? (\r\n              <Link to=\"/signup\">회원가입</Link>\r\n            ) : (\r\n              <Link to=\"/login\">로그인</Link>\r\n            )}\r\n          </Footer>\r\n        </Div>\r\n      </AuthFormBlock>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n","import React, { useCallback, useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { changeField, initializeForm, signup } from 'redux/modules/auth';\r\nimport AuthForm from 'components/Auth/AuthForm';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import { check } from 'redux/modules/user';\r\n\r\nconst SignupForm = () => {\r\n  // const navigate = useNavigate();\r\n  const [error, setError] = useState(null);\r\n  const dispatch = useDispatch();\r\n  const {\r\n    form,\r\n    // auth, authError, userState\r\n  } = useSelector(({ auth, user }) => ({\r\n    // state.auth, state.user\r\n    form: auth.signup, // store이름 auth, auth.signup에(회원 정보 목록 있음)\r\n    auth: auth.auth,\r\n    authError: auth.authError,\r\n    userState: user.userState,\r\n  }));\r\n\r\n  // 인풋 변경 이벤트 핸들러\r\n  const onChange = useCallback(\r\n    (e) => {\r\n      const { value, name } = e.target;\r\n      dispatch(\r\n        changeField({\r\n          form: 'signup',\r\n          key: name,\r\n          value,\r\n        }),\r\n      );\r\n    },\r\n    [dispatch],\r\n  );\r\n\r\n  // 폼 등록 이벤트 핸들러\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const {\r\n      username,\r\n      password,\r\n      passwordCheck,\r\n      realName,\r\n      nickname,\r\n      birthday,\r\n      phoneNum,\r\n      gender,\r\n      email,\r\n    } = form;\r\n    // 필수항목 중 하나라도 비어 있다면\r\n    if (\r\n      [username, password, passwordCheck, realName, nickname, email].includes(\r\n        '',\r\n      )\r\n    ) {\r\n      setError('필수항목을 모두 입력해 주세요.');\r\n      return;\r\n    }\r\n    if (password !== passwordCheck) {\r\n      // 패스워드 다르면 오류출력 후 초기화\r\n      setError('비밀번호가 일치하지 않습니다.');\r\n      changeField({ form: 'signup', key: 'password', value: '' });\r\n      changeField({ form: 'signup', key: 'passwordCheck', value: '' });\r\n      return;\r\n    }\r\n    dispatch(\r\n      signup({\r\n        username,\r\n        password,\r\n        realName,\r\n        nickname,\r\n        birthday,\r\n        phoneNum,\r\n        gender,\r\n        email,\r\n      }),\r\n    );\r\n  };\r\n\r\n  // 컴포넌트가 처음 렌더링될 때 form 초기화\r\n  useEffect(() => {\r\n    dispatch(initializeForm('signup'));\r\n  }, [dispatch]);\r\n\r\n  // 회원가입 성공/실패 처리\r\n  // useEffect(() => {\r\n  //   if (authError) {\r\n  //     // 아이디가 이미 존재\r\n  //     if (authError.response.status === 409) {\r\n  //       setError('이미 존재하는 아이디입니다.');\r\n  //       return;\r\n  //     }\r\n  //     // 기타 이유\r\n  //     setError('회원가입 실패');\r\n  //     return;\r\n  //   }\r\n  //   if (auth) {\r\n  //     console.log('회원가입 성공');\r\n  //     console.log(auth);\r\n  //     dispatch(check());\r\n  //   }\r\n  // }, [auth, authError, dispatch]);\r\n\r\n  // user 값이 잘 설정되었는지 확인\r\n  // useEffect(() => {\r\n  //   if (userState) {\r\n  //     navigate('/');\r\n  //     try {\r\n  //       localStorage.setItem('userState', JSON.stringify(userState));\r\n  //     } catch (e) {\r\n  //       console.log('localStorage is not working');\r\n  //     }\r\n  //   }\r\n  // }, [userState, navigate]);\r\n\r\n  return (\r\n    <AuthForm\r\n      type=\"signup\"\r\n      form={form}\r\n      onChange={onChange}\r\n      onSubmit={onSubmit}\r\n      error={error}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SignupForm;\r\n","import React from 'react';\r\nimport AuthTemplate from 'components/Auth/AuthTemplate';\r\nimport SignupForm from 'containers/Auth/SignupForm';\r\n\r\nconst SignupPage = () => {\r\n  return (\r\n    <AuthTemplate>\r\n      <SignupForm />\r\n    </AuthTemplate>\r\n  );\r\n};\r\n\r\nexport default SignupPage;\r\n","import React, { useEffect, useCallback } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { changeField, initializeForm, login } from 'redux/modules/auth';\r\nimport AuthForm from 'components/Auth/AuthForm';\r\n// import { check } from 'redux/modules/user';\r\n// import { useNavigate } from 'react-router-dom';\r\n\r\nconst LoginForm = () => {\r\n  // const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const {\r\n    form,\r\n    // auth, authError, userState\r\n  } = useSelector(({ auth, user }) => ({\r\n    // state.auth, state.user\r\n    form: auth.login, // store이름 auth, auth.signup에(회원 정보 목록 있음)\r\n    auth: auth.auth,\r\n    authError: auth.authError,\r\n    userState: user.userState,\r\n  }));\r\n\r\n  // 인풋 변경 이벤트 핸들러\r\n  const onChange = useCallback(\r\n    (e) => {\r\n      const { value, name } = e.target;\r\n      dispatch(\r\n        changeField({\r\n          form: 'login',\r\n          key: name,\r\n          value,\r\n        }),\r\n      );\r\n    },\r\n    [dispatch],\r\n  );\r\n\r\n  // 폼 등록 이벤트 핸들러\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { username, password } = form;\r\n    dispatch(login({ username, password }));\r\n  };\r\n\r\n  // 컴포넌트가 처음 렌더링될 때 form 초기화\r\n  useEffect(() => {\r\n    dispatch(initializeForm('login'));\r\n  }, [dispatch]);\r\n\r\n  // useEffect(() => {\r\n  //   if (authError) {\r\n  //     console.log('오류 발생');\r\n  //     console.log(authError);\r\n  //     return;\r\n  //   }\r\n  //   if (auth) {\r\n  //     console.log('로그인 성공');\r\n  //     dispatch(check());\r\n  //   }\r\n  // }, [auth, authError, dispatch]);\r\n\r\n  // useEffect(() => {\r\n  //   if (userState) {\r\n  //     navigate('/');\r\n  //     try {\r\n  //       localStorage.setItem('userState', JSON.stringify(userState));\r\n  //     } catch (e) {\r\n  //       console.log('localStorage is not working');\r\n  //     }\r\n  //   }\r\n  // }, [userState, navigate]);\r\n\r\n  return (\r\n    <AuthForm\r\n      type=\"login\"\r\n      form={form}\r\n      onChange={onChange}\r\n      onSubmit={onSubmit}\r\n    />\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import React from 'react';\r\nimport AuthTemplate from 'components/Auth/AuthTemplate';\r\nimport LoginForm from 'containers/Auth/LoginForm';\r\n\r\nconst LoginPage = () => {\r\n  return (\r\n    <AuthTemplate>\r\n      <LoginForm />\r\n    </AuthTemplate>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","import React from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport oc from 'open-color';\r\n\r\nconst Menu = styled.div`\r\n  /* height: calc(100vh - 58px); // header 크기가 58px(55 + 3) */\r\n  /* height: 100vh; */\r\n  /* z-index: 1; */\r\n  /* background-color: ${oc.teal[6]}; */\r\n  background-color: rgb(109, 144, 176);\r\n  font-family: 'Rajdhani';\r\n\r\n  width: 220px;\r\n`;\r\n\r\nconst List = styled.ul`\r\n  /* position: absolute;\r\n  top: 25%;\r\n  width: 14vw; */\r\n  padding: 0;\r\n  /* margin: 0; */\r\n  /* z-index: 1; */\r\n  /* background-color: blue; */\r\n\r\n  padding-left: 40px;\r\n  margin-top: 100px;\r\n`;\r\n\r\nconst Item = styled.li`\r\n  font-size: 20px; // 반응형 고민\r\n  font-weight: 550;\r\n  padding-bottom: 20px;\r\n  /* margin-left: 20%; */\r\n  list-style: none;\r\n  a {\r\n    color: ${(props) => (props.selected ? `black` : 'white')};\r\n  }\r\n`;\r\n\r\nconst MenuLink = styled(Link)`\r\n  text-decoration: none;\r\n`;\r\n\r\nconst CanvasMenu = () => {\r\n  const { pathname } = useLocation();\r\n  return (\r\n    <Menu>\r\n      <List>\r\n        <Item selected={pathname === '/canvas/setting'}>\r\n          <MenuLink to=\"../setting\">여행 설정</MenuLink>\r\n        </Item>\r\n        <Item selected={pathname === '/canvas/select'}>\r\n          <MenuLink to=\"../select\">블록 선택</MenuLink>\r\n        </Item>\r\n        <Item selected={pathname === '/canvas/build'}>\r\n          <MenuLink to=\"../build\">여행 캔버스</MenuLink>\r\n        </Item>\r\n        <Item selected={pathname === '/canvas/share'}>\r\n          <MenuLink to=\"../share\">여행 공유</MenuLink>\r\n        </Item>\r\n      </List>\r\n    </Menu>\r\n  );\r\n};\r\n\r\nexport default CanvasMenu;\r\n","import React from 'react';\r\nimport CanvasMenu from './CanvasMenu';\r\nimport styled from 'styled-components';\r\n\r\n// grid 적용 0107\r\n// flex로 변경 0228\r\nconst Div = styled.div`\r\n  display: flex;\r\n  height: 100vh; // header 생기면 변환 필요\r\n  /* grid-template-columns: 1fr 6fr; */\r\n`;\r\n\r\nconst CanvasTemplate = ({ children }) => {\r\n  return (\r\n    <Div>\r\n      <CanvasMenu />\r\n      {children}\r\n    </Div>\r\n  );\r\n};\r\n\r\nexport default CanvasTemplate;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport palette from 'lib/styles/palette';\r\nimport { Draggable } from 'react-beautiful-dnd';\r\n\r\nconst Container = styled.div`\r\n  /* border: 1px solid lightgrey; */\r\n  margin-bottom: 8px;\r\n  border-radius: 2px;\r\n  /* padding: 8px; */\r\n  background: ${(props) => (props.isDragging ? 'lightgreen' : 'white')};\r\n`;\r\n\r\nconst List = styled.li`\r\n  display: flex;\r\n  list-style: none;\r\n  /* margin-bottom: 11px; */\r\n  background-color: ${palette.gray[0]};\r\n  box-shadow: 3px 3px 3px 3px ${palette.gray[5]};\r\n  padding: 5px;\r\n`;\r\n\r\nconst Img = styled.img`\r\n  width: 5vw;\r\n  height: 3.2vw;\r\n`;\r\n\r\nconst ListDiv = styled.div`\r\n  margin-left: 5px;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst Location = ({ location, index, type }) => {\r\n  return (\r\n    <>\r\n      {/* {console.log(key, location, index, type)} */}\r\n      <Draggable draggableId={location.id} index={index} type={type}>\r\n        {(provided, snapshot) => (\r\n          <Container\r\n            ref={provided.innerRef}\r\n            {...provided.dragHandleProps}\r\n            {...provided.draggableProps}\r\n            isDragging={snapshot.isDragging}\r\n          >\r\n            <List>\r\n              <Img src={location.image} alt=\"img\" />\r\n              <ListDiv>\r\n                {location.id}\r\n                {/* id는 일단 한글 name으로 설정해둚, 모든 location의 id가 다르게 생성되어야함 */}\r\n                <br />\r\n                2021.01.26\r\n              </ListDiv>\r\n            </List>\r\n          </Container>\r\n        )}\r\n      </Draggable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Location;\r\n","import React from 'react';\r\nimport { Droppable } from 'react-beautiful-dnd';\r\nimport styled from 'styled-components';\r\nimport Location from './Location';\r\n\r\nconst Container = styled('div')`\r\n  margin: 8px;\r\n  border-radius: 15px;\r\n  border: 1px solid lightgrey;\r\n  /* display: flex; */\r\n  flex-direction: day;\r\n  width: 230px;\r\n  background: white;\r\n`;\r\n\r\nconst Title = styled('h3')`\r\n  text-align: center;\r\n`;\r\n\r\nconst LocationsList = styled('div')`\r\n  padding: 8px;\r\n  flex-grow: 1;\r\n  min-height: 100px;\r\n  transition: background-color ease 0.2s;\r\n  background-color: ${(props) =>\r\n    props.isDraggingOver ? 'palevioletred' : 'white'};\r\n`;\r\n\r\nconst Day = ({ day, locations }) => {\r\n  return (\r\n    <Container>\r\n      <Title>{day.title}</Title>\r\n      <Droppable droppableId={day.id} type=\"location\">\r\n        {(provided, snapshot) => (\r\n          <LocationsList\r\n            ref={provided.innerRef}\r\n            {...provided.droppableProps}\r\n            isDraggingOver={snapshot.isDraggingOver}\r\n          >\r\n            {locations.map((location, index) => {\r\n              return (\r\n                <Location key={location.id} location={location} index={index} />\r\n              );\r\n            })}\r\n            {provided.placeholder}\r\n          </LocationsList>\r\n        )}\r\n      </Droppable>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Day;\r\n","import React from 'react';\r\nimport { styled } from '@mui/styles';\r\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\r\n\r\nconst MyArrowIcon = styled(ArrowDropDownIcon)({\r\n  '&:hover': {\r\n    // color: \"red\",\r\n    cursor: 'pointer',\r\n    transform: 'scale(1.5)',\r\n    transition: 'all 0.2s linear',\r\n  },\r\n});\r\n\r\nconst ArrowIcon = ({ onClick }) => {\r\n  return <MyArrowIcon onClick={onClick} />;\r\n};\r\n\r\nexport default ArrowIcon;\r\n","import React, { useState } from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport palette from 'lib/styles/palette';\r\nimport ArrowIcon from 'components/Canvas/BuildTab/Styles/ArrowIcon';\r\nimport Location from './Location';\r\nimport { Droppable } from 'react-beautiful-dnd';\r\n\r\nconst Div = styled.div`\r\n  border-radius: 5px;\r\n  background-color: ${palette.gray[3]};\r\n  padding: 10px;\r\n  margin: 10px;\r\n  height: 6vh;\r\n  transition: all 0.2s linear;\r\n  ::-webkit-scrollbar {\r\n    width: 10px;\r\n  }\r\n  ::-webkit-scrollbar-thumb {\r\n    background-color: #2f3542;\r\n  }\r\n  ::-webkit-scrollbar-track {\r\n    background-color: grey;\r\n  }\r\n  overflow: hidden;\r\n  ${(props) =>\r\n    props.clickState &&\r\n    css`\r\n      overflow: auto;\r\n      height: 52vh;\r\n    `}\r\n`;\r\n\r\nconst Title = styled.div`\r\n  height: calc(6vh - 20px);\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nconst Ul = styled.ul`\r\n  padding: 0;\r\n`;\r\n\r\nconst CategoryBlock = ({ locations, type }) => {\r\n  const [clickState, setClickState] = useState(false);\r\n\r\n  const onClick = () => {\r\n    setClickState(!clickState);\r\n  };\r\n\r\n  return (\r\n    <Div clickState={clickState}>\r\n      <Title>\r\n        {type}\r\n        <ArrowIcon onClick={onClick} />\r\n      </Title>\r\n      <Droppable droppableId={type} type=\"location\">\r\n        {(provided) => (\r\n          <Ul ref={provided.innerRef} {...provided.droppableProps}>\r\n            {locations.map((location, index) => {\r\n              return (\r\n                <Location\r\n                  location={location}\r\n                  index={index}\r\n                  key={location.id}\r\n                  type={type}\r\n                />\r\n              );\r\n            })}\r\n            {provided.placeholder}\r\n          </Ul>\r\n        )}\r\n      </Droppable>\r\n    </Div>\r\n  );\r\n};\r\n\r\nexport default CategoryBlock;\r\n","import React from 'react';\r\nimport { DragDropContext } from 'react-beautiful-dnd';\r\nimport styled from 'styled-components';\r\nimport palette from 'lib/styles/palette';\r\nimport Day from 'components/Canvas/BuildTab/Day';\r\nimport CategoryBlock from './CategoryBlock';\r\n\r\nconst Container = styled.div`\r\n  overflow: auto;\r\n  height: 70vh;\r\n  display: flex;\r\n  /* margin-top: 25px; */\r\n  background-color: ${palette.gray[3]};\r\n`;\r\n\r\nconst Basket = styled.div`\r\n  overflow: auto;\r\n  width: 280px;\r\n  /* height: 60vh; */\r\n  /* margin-left: 30px; */\r\n  background-color: rgb(109, 144, 176);\r\n\r\n  ::-webkit-scrollbar {\r\n    /* width: 10px; */\r\n  }\r\n  ::-webkit-scrollbar-thumb {\r\n    background-color: #2f3542;\r\n  }\r\n  ::-webkit-scrollbar-track {\r\n    background-color: grey;\r\n  }\r\n`;\r\n\r\nconst Days = styled.div`\r\n  /* width: 70%; */\r\n  display: flex;\r\n  flex: 1; //남은 영역 모두 채움\r\n  justify-content: space-around;\r\n`;\r\n\r\nconst categoryObj = {\r\n  attractions: '관광지',\r\n  restaurants: '음식점',\r\n  accommodations: '숙박시설',\r\n};\r\n\r\nconst categoryKeys = Object.keys(categoryObj);\r\n\r\nconst DndMainArea = ({ userPlan, globalLocations, setUserPlanData }) => {\r\n  const { travelDays, dayOrder, selectedLocations } = userPlan;\r\n\r\n  // 0304 drop 까지 구현완료\r\n  // day에서 재정렬할때 구현필요함\r\n  const onDragEnd = (result) => {\r\n    const { destination, source, draggableId } = result;\r\n    // dnd\r\n    if (!destination) return;\r\n    const startDropId = source.droppableId;\r\n    const endDropId = destination.droppableId;\r\n    if (startDropId === endDropId) return;\r\n    if (\r\n      // 출발이 selectedLocation 도착 day\r\n      categoryKeys.indexOf(startDropId) !== -1 &&\r\n      categoryKeys.indexOf(endDropId) === -1\r\n    ) {\r\n      console.log(result);\r\n      const dragIdObj = {};\r\n      dragIdObj[startDropId] = draggableId;\r\n      console.log(dragIdObj);\r\n      const newSelLocOrder = { ...selectedLocations };\r\n      const newDayOrder = { ...travelDays };\r\n      newSelLocOrder[startDropId].splice(source.index, 1);\r\n      console.log(newSelLocOrder);\r\n      newDayOrder[endDropId].locationIds.splice(\r\n        destination.index,\r\n        0,\r\n        dragIdObj,\r\n      );\r\n      setUserPlanData({\r\n        ...userPlan,\r\n        selectedLocations: newSelLocOrder,\r\n        travelDays: newDayOrder,\r\n      });\r\n    }\r\n    if (\r\n      // 출발이 day 도착 day\r\n      categoryKeys.indexOf(startDropId) === -1 &&\r\n      categoryKeys.indexOf(endDropId) === -1\r\n    ) {\r\n      const dragIdObj = {};\r\n      const newDayOrder = { ...travelDays };\r\n      const temp = newDayOrder[startDropId].locationIds.splice(source.index, 1);\r\n      dragIdObj[Object.keys(temp[0])[0]] = draggableId;\r\n      console.log(dragIdObj);\r\n      newDayOrder[endDropId].locationIds.splice(\r\n        destination.index,\r\n        0,\r\n        dragIdObj,\r\n      );\r\n      setUserPlanData({\r\n        ...userPlan,\r\n        travelDays: newDayOrder,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DragDropContext onDragEnd={onDragEnd}>\r\n        <Container>\r\n          {/* 담은 블록 */}\r\n          <Basket>\r\n            {categoryKeys.map((category) => {\r\n              // 카테고리별로 데이터 전달\r\n              const locations = selectedLocations[category].map(\r\n                (locationId) => {\r\n                  let locObj = {};\r\n                  locObj = globalLocations[category][locationId];\r\n                  locObj['category'] = category;\r\n                  return locObj;\r\n                },\r\n              );\r\n              return (\r\n                <CategoryBlock\r\n                  key={category}\r\n                  locations={locations}\r\n                  type={category}\r\n                />\r\n              );\r\n            })}\r\n          </Basket>\r\n          {/* 데이 */}\r\n          <Days>\r\n            {dayOrder &&\r\n              dayOrder.map((dayId) => {\r\n                // 데이 개수, 순서에 따라 저장된 데이터 전달(json)\r\n                const day = travelDays[dayId]; // object\r\n                const locations = day.locationIds.map((locationId) => {\r\n                  let locObj = {};\r\n                  let category = Object.keys(locationId).join();\r\n                  let key = locationId[category];\r\n                  locObj = globalLocations[category][key];\r\n                  locObj['category'] = category;\r\n                  return locObj;\r\n                });\r\n                return <Day key={day.id} day={day} locations={locations} />;\r\n              })}\r\n          </Days>\r\n        </Container>\r\n      </DragDropContext>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DndMainArea;\r\n\r\n//https://codesandbox.io/s/react-beautiful-dnd-example-forked-9l3wz8?file=/src/index.js\r\n\r\n// 0216\r\n// 컴포넌트 재사용에 대해 생각 해보자\r\n// 뭔가 반복문으로 json data.${여기..} 다른 데이터를 보낼 수 있을 거같은데..\r\n\r\n// 0221\r\n// 현재 진행 상황\r\n// data.json 에 있는 개수 기반\r\n// category 3개, 전체 droppable, 각 요소 location(draggable)\r\n// day 2개, 전체 droppable, 각 요소 location(draggable)\r\n// 드래그로 움직이기만 하는 상황, 드랍 기능 추가해야함\r\n// 그리고, 드래그를 잡았을 때 위치가 살짝 아래로 잡히는데 이 또한 수정해야함.\r\n\r\n// 0223\r\n// BockBasket Component 삭제\r\n// data.json 에 dayOrder와 travelDays는 초기 설정에서 설정시 생성\r\n// scss 삭제해야함\r\n// 그리고, 드래그를 잡았을 때 위치가 살짝 아래로 잡히는데 이 또한 수정해야함.(0228 수정, css position 문제)\r\n\r\n// 0228\r\n// Basket 에서 CanvasBlock 중 하나의 카테고리가 열리면 하나는 닫히도록 설정해서 높이 조절\r\n// onDragEnd 에서 순서 조정\r\n// 결국 redux로 plan을 받아와서 useState로 상태 저장을 하는데, 장바구니의 세개의 순서, day의 2개의 각각 id순서들을 splice를 사용해서 올바르게 정렬후 setState 로 상태를 저장해야함\r\n\r\n// 0303\r\n// redux 안 쓰고, 위 component 에서 props 받아오는걸로..\r\n","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport styled from 'styled-components';\r\nimport DndMainArea from 'components/Canvas/BuildTab/DndMainArea';\r\n\r\nconst Section = styled.div`\r\n  margin-top: 30px;\r\n  background-color: white;\r\n  border: 2px solid black;\r\n  border-radius: 7px;\r\n`;\r\n\r\nconst Div = styled.div``;\r\n\r\nconst BuildBlockForm = () => {\r\n  const [userPlan, setUserPlan] = useState(null);\r\n  const [globalLocations, setGlobalLocations] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      const userPlanResult = await axios.get(\r\n        'http://localhost:4000/travelPlans/1',\r\n      );\r\n      setUserPlan(userPlanResult.data);\r\n      const globalLocationsResult = await axios.get(\r\n        'http://localhost:4000/locations',\r\n      );\r\n      setGlobalLocations(globalLocationsResult.data);\r\n    };\r\n    getData();\r\n  }, []);\r\n\r\n  const setUserPlanData = (x) => {\r\n    setUserPlan(x);\r\n  };\r\n\r\n  return (\r\n    <Section>\r\n      {(!userPlan || !globalLocations) && '로딩 중..'}\r\n      {userPlan && globalLocations && (\r\n        <Div>\r\n          <h4>{userPlan.name}</h4>\r\n          <DndMainArea\r\n            setUserPlanData={setUserPlanData}\r\n            userPlan={userPlan}\r\n            globalLocations={globalLocations}\r\n          />\r\n        </Div>\r\n      )}\r\n    </Section>\r\n  );\r\n};\r\n\r\nexport default BuildBlockForm;\r\n\r\n// 0303 plan redux 삭제, useState사용으로 변경\r\n// container에서 데이터관리..\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport BuildBlockForm from 'containers/Canvas/BuildBlockForm';\r\nimport 'components/Canvas/BuildTab/Styles/CanvasComponent.scss';\r\n\r\nconst CanvasDiv = styled.div`\r\n  /* position: absolute; */\r\n  /* top: 50%; */\r\n  /* left: 50%; */\r\n  /* transform: translate(-50%, -50%); */\r\n  /* height: 75vh; */\r\n  /* width: 100%; */\r\n  /* padding-left: 17.5%; */\r\n  /* z-index: -1; */\r\n  /* background-color: red; */\r\n  padding-top: 50px;\r\n  padding-left: 30px;\r\n  padding-right: 20px;\r\n  width: 100%;\r\n`;\r\n\r\nconst H1 = styled.div`\r\n  /* font-size: $font-lg; */\r\n  font-size: 30px;\r\n`;\r\n\r\nconst textMap = {\r\n  setting: '여행 설정',\r\n  select: '블록 선택',\r\n  build: '여행 캔버스',\r\n  share: '여행 공유',\r\n};\r\n\r\nconst CanvasForm = ({ type }) => {\r\n  const text = textMap[type];\r\n\r\n  return (\r\n    <CanvasDiv>\r\n      <H1>{text}</H1>\r\n      {type === 'build' && <BuildBlockForm />}\r\n    </CanvasDiv>\r\n  );\r\n};\r\n\r\nexport default CanvasForm;\r\n","import React from 'react';\r\nimport CanvasTemplate from 'components/Canvas/CanvasTemplate';\r\nimport CanvasForm from 'components/Canvas/CanvasForm';\r\n\r\nconst TravelSettingPage = () => {\r\n  return (\r\n    <>\r\n      <CanvasTemplate>\r\n        <CanvasForm type=\"setting\" />\r\n      </CanvasTemplate>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TravelSettingPage;\r\n","import React from 'react';\r\nimport CanvasTemplate from 'components/Canvas/CanvasTemplate';\r\nimport CanvasForm from 'components/Canvas/CanvasForm';\r\n\r\nconst SelectBlockPage = () => {\r\n  return (\r\n    <>\r\n      <CanvasTemplate>\r\n        <CanvasForm type=\"select\" />\r\n      </CanvasTemplate>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SelectBlockPage;\r\n","import React from 'react';\r\nimport CanvasTemplate from 'components/Canvas/CanvasTemplate';\r\nimport CanvasForm from 'components/Canvas/CanvasForm';\r\n\r\nconst BuildBlockPage = () => {\r\n  return (\r\n    <>\r\n      <CanvasTemplate>\r\n        <CanvasForm type=\"build\" />\r\n      </CanvasTemplate>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BuildBlockPage;\r\n","import React from 'react';\r\nimport CanvasTemplate from 'components/Canvas/CanvasTemplate';\r\nimport CanvasForm from 'components/Canvas/CanvasForm';\r\n\r\nconst TravelSharePage = () => {\r\n  return (\r\n    <>\r\n      <CanvasTemplate>\r\n        <CanvasForm type=\"share\" />\r\n      </CanvasTemplate>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TravelSharePage;\r\n","// 임시로 만든 캔버스 메뉴 리스트 페이지\r\nimport React from 'react';\r\nimport { Routes, Route } from 'react-router-dom';\r\nimport TravelSettingPage from './TravelSettingPage';\r\nimport SelectBlockPage from './SelectBlockPage';\r\nimport BuildBlockPage from './BuildBlockPage';\r\nimport TravelSharePage from './TravelSharePage';\r\n\r\nconst CanvasMainPage = () => {\r\n  return (\r\n    <Routes>\r\n      <Route element={<TravelSettingPage />} path=\"setting\" />\r\n      <Route element={<SelectBlockPage />} path=\"select\" />\r\n      <Route element={<BuildBlockPage />} path=\"build\" />\r\n      <Route element={<TravelSharePage />} path=\"share\" />\r\n    </Routes>\r\n  );\r\n};\r\n\r\nexport default CanvasMainPage;\r\n","import React from 'react';\r\nimport { Routes, Route, useRoutes } from 'react-router-dom';\r\nimport SignUpPage from 'pages/SignupPage';\r\nimport LoginPage from 'pages/LoginPage';\r\nimport CanvasMainPage from 'pages/CanvasPages/CanvasMainPage';\r\n// import HeaderContainer from './containers/common/HeaderContainer';\r\n// import LandingPage from 'pages/LandingPage';\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      {/* <HeaderContainer /> */}\r\n      {useRoutes([\r\n        { path: '/', element: <SignUpPage /> }, // 임시로 signup\r\n        { path: '/signup', element: <SignUpPage /> },\r\n        { path: '/login', element: <LoginPage /> },\r\n        { path: '/canvas/*', element: <CanvasMainPage /> },\r\n      ])}\r\n      {/* <Routes>\r\n        <Route element={<SignUpPage />} path=\"/\" />\r\n        <Route element={<SignUpPage />} path=\"/signup\" />\r\n        <Route element={<LoginPage />} path=\"/login\" />\r\n        <Route element={<CanvasMainPage />} path=\"/canvas/*\" />\r\n      </Routes> */}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n// 0303 useRoutes 사용\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { createAction, handleActions } from 'redux-actions';\r\nimport { takeLatest, call } from 'redux-saga/effects';\r\nimport createRequestSaga, { createRequestActionTypes } from 'lib/createRequestSaga';\r\nimport * as authAPI from 'lib/api/auth';\r\n\r\nconst TEMP_SET_USER = 'user/TEMP_SET_USER'; //새로고침 이후 임시 로그인 처리\r\n// 회원 정보 확인\r\nconst [CHECK, CHECK_SUCCESS, CHECK_FAILURE] = createRequestActionTypes(\r\n  'user/CHECK',\r\n);\r\nconst LOGOUT = 'user/LOGOUT';\r\n\r\nexport const tempSetUser = createAction(TEMP_SET_USER, user => user);\r\nexport const check = createAction(CHECK);\r\nexport const logout = createAction(LOGOUT);\r\n\r\nconst checkSaga = createRequestSaga(CHECK, authAPI.check);\r\n\r\nfunction checkFailureSaga() {\r\n  try {\r\n    localStorage.removeItem('userState');\r\n  } catch (e) {\r\n    console.log('localStorage is not working');\r\n  }\r\n}\r\n\r\nfunction* logoutSaga() {\r\n  try {\r\n    yield call(authAPI.logout);\r\n    localStorage.removeItem('userState');\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nexport function* userSaga() {\r\n  yield takeLatest(CHECK, checkSaga);\r\n  yield takeLatest(CHECK_FAILURE, checkFailureSaga);\r\n  yield takeLatest(LOGOUT, logoutSaga);\r\n}\r\n\r\nconst initialState = {\r\n  userState: null, // user 로 적용이 안됨\r\n  checkError: null,\r\n};\r\n\r\nexport default handleActions({\r\n  [TEMP_SET_USER]: (state, { payload: userState }) => ({\r\n    ...state,\r\n    userState,\r\n  }),\r\n  [CHECK_SUCCESS]: (state, { payload: userState }) => ({\r\n    ...state,\r\n    userState,\r\n    checkError: null\r\n  }),\r\n  [CHECK_FAILURE]: (state, { payload: error }) => ({\r\n    ...state,\r\n    userState: null,\r\n    checkError: error,\r\n  }),\r\n  [LOGOUT]: state => ({\r\n    ...state,\r\n    userState: null,\r\n  })\r\n}, initialState);","// import client from './client';\r\n\r\n// export const getPlan = () => {\r\n//   client.get('http://localhost:4000/travelPlans');\r\n// }\r\n\r\n// export const getPlan = () => {\r\n//   client.get('https://jsonplaceholder.typicode.com/users');\r\n// };\r\n\r\nimport axios from 'axios';\r\n\r\nexport const getPlan = async id => {\r\n  try {\r\n    return await axios.get(`http://localhost:4000/travelPlans/${id}`);\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n","import { createAction, handleActions } from 'redux-actions';\r\nimport { takeLatest } from 'redux-saga/effects';\r\nimport createRequestSaga, {\r\n  createRequestActionTypes,\r\n} from 'lib/createRequestSaga';\r\nimport * as planAPI from 'lib/api/plan';\r\n\r\nconst [GET_PLAN, GET_PLAN_SUCCESS, GET_PLAN_FAILURE] =\r\n  createRequestActionTypes('plan/GET_PLAN');\r\n\r\nexport const getPlan = createAction(GET_PLAN);\r\n\r\nexport const getPlansSaga = createRequestSaga(GET_PLAN, planAPI.getPlan);\r\nexport function* planSaga() {\r\n  yield takeLatest(GET_PLAN, getPlansSaga);\r\n}\r\n\r\n// 초기값\r\nconst initialState = {\r\n  plan: null,\r\n  planError: null,\r\n};\r\n\r\nconst plan = handleActions(\r\n  {\r\n    // plan 가져오기 성공\r\n    [GET_PLAN_SUCCESS]: (state, { payload: plan }) => ({\r\n      ...state,\r\n      plan,\r\n      planError: null,\r\n    }),\r\n    //  plan 가져오기 실패\r\n    [GET_PLAN_FAILURE]: (state, { payload: error }) => ({\r\n      ...state,\r\n      planError: error,\r\n    }),\r\n  },\r\n  initialState,\r\n);\r\n\r\nexport default plan;\r\n","import { all } from '@redux-saga/core/effects';\r\nimport { combineReducers } from 'redux';\r\nimport loading from './loading';\r\nimport auth, { authSaga } from './auth';\r\nimport user, { userSaga } from './user';\r\nimport plan, { planSaga } from './plan';\r\n\r\nconst rootReducer = combineReducers({\r\n  auth,\r\n  loading,\r\n  user,\r\n  plan\r\n});\r\n\r\nexport function* rootSaga() {\r\n  yield all([authSaga(), userSaga(), planSaga()]);\r\n}\r\n\r\nexport default rootReducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App.js';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport './index.css';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { applyMiddleware, createStore } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport rootReducer, { rootSaga } from 'redux/modules';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport { tempSetUser, check } from 'redux/modules/user';\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(sagaMiddleware)),\r\n);\r\n\r\nfunction loadUser() {\r\n  try {\r\n    const user = localStorage.getItem('userState');\r\n    if (!user) return;\r\n    store.dispatch(tempSetUser(user));\r\n    store.dispatch(check());\r\n  } catch (e) {\r\n    console.log('localStorage is not working');\r\n  }\r\n}\r\n\r\n// saga run 이후에 user loading\r\nsagaMiddleware.run(rootSaga);\r\nloadUser();\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </Provider>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n\r\n// 220302 정리해서 깃허브 올리기\r\n"],"sourceRoot":""}